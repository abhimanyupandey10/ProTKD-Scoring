name: Build Apps

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      # Checkout repo
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      # Cache pip
      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt pyinstaller

      # Clean previous builds
      - name: Clean previous builds (Linux/macOS)
        if: matrix.os != 'windows-latest'
        run: rm -rf build dist *.spec || true

      - name: Clean previous builds (Windows)
        if: matrix.os == 'windows-latest'
        run: powershell "Remove-Item -Recurse -Force build, dist, *.spec -ErrorAction SilentlyContinue"

      # Build on Windows
      - name: Build with PyInstaller (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          pyinstaller --onefile --noconsole --name ProTKD ^
            --icon=logo.ico ^
            --add-data "templates;templates" ^
            --add-data "static;static" ^
            app.py

      # Build on Linux
      - name: Build with PyInstaller (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          pyinstaller --onefile --noconsole --name ProTKD \
            --add-data "templates:templates" \
            --add-data "static:static" \
            app.py

      # Build on macOS
      - name: Build with PyInstaller (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          pyinstaller --onefile --noconsole --name ProTKD \
            --icon=logo.icns \
            --add-data "templates:templates" \
            --add-data "static:static" \
            app.py

      # List output
      - name: List build output
        run: ls -R dist

      # Upload artifacts
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ProTKD-${{ matrix.os }}-${{ github.sha }}
          path: dist/*
          include-hidden-files: true
